import DynamicView from "./dynamic_view"
import TemplateView from "./template_view"
import Compile from "../compile"

// Generated by CoffeeScript 1.7.1
var IfView,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

IfView = (function(_super) {
  __extends(IfView, _super);

  function IfView() {
    IfView.__super__.constructor.apply(this, arguments);
    this._bindToModel(this.ast.argument, (function(_this) {
      return function(value) {
        if (value) {
          return _this.replace([new TemplateView(_this.ast.children, _this.context)]);
        } else if (_this.ast["else"]) {
          return _this.replace([new TemplateView(_this.ast["else"].children, _this.context)]);
        } else {
          return _this.clear();
        }
      };
    })(this));
  }

  return IfView;

})(DynamicView);

Compile.if = function(ast, context) {
  return new IfView(ast, context);
};

export default IfView;
