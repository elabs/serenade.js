import { merge } from "../helpers"
import AssociationCollection from "../association_collection"
import Collection from "../collection"

// Generated by CoffeeScript 1.7.1
export default function(name, options) {
  var propOptions;
  if (options == null) {
    options = {};
  }
  propOptions = merge(options, {
    changed: true,
    get: function() {
      var valueName;
      valueName = "_" + name;
      if (!this[valueName]) {
        this[valueName] = new AssociationCollection(this, options, []);
        this[valueName].change.bind(this[name + "_property"].trigger);
      }
      return this[valueName];
    },
    set: function(value) {
      return this[name].update(value);
    }
  });
  this.property(name, propOptions);
  this.property(name + 'Ids', {
    get: function() {
      return new Collection(this[name]).map(function(item) {
        return item != null ? item.id : void 0;
      });
    },
    set: function(ids) {
      var id, objects;
      objects = (function() {
        var _i, _len, _results;
        _results = [];
        for (_i = 0, _len = ids.length; _i < _len; _i++) {
          id = ids[_i];
          _results.push(options.as().find(id));
        }
        return _results;
      })();
      return this[name].update(objects);
    },
    dependsOn: name,
    serialize: options.serializeIds
  });
  return this.property(name + 'Count', {
    get: function() {
      return this[name].length;
    },
    dependsOn: name
  });
};
