import { merge, capitalize } from "../helpers"

// Generated by CoffeeScript 1.7.1
var __slice = [].slice;

export default function() {
  var names, options, to, _i;
  names = 2 <= arguments.length ? __slice.call(arguments, 0, _i = arguments.length - 1) : (_i = 0, []), options = arguments[_i++];
  to = options.to;
  return names.forEach((function(_this) {
    return function(name) {
      var propName, propOptions;
      propName = name;
      if (options.prefix === true) {
        propName = to + capitalize(name);
      } else if (options.prefix) {
        propName = options.prefix + capitalize(name);
      }
      if (options.suffix === true) {
        propName = propName + capitalize(to);
      } else if (options.suffix) {
        propName = propName + options.suffix;
      }
      propOptions = merge(options, {
        dependsOn: options.dependsOn || ("" + to + "." + name),
        get: function() {
          var _ref;
          return (_ref = this[to]) != null ? _ref[name] : void 0;
        },
        set: function(value) {
          var _ref;
          return (_ref = this[to]) != null ? _ref[name] = value : void 0;
        }
      });
      return _this.property(propName, propOptions);
    };
  })(this));
};
